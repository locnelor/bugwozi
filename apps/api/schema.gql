# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SysAccountEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  provider: String!
  value: String!
  userId: String!
  user: SysUserEntity
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SysUserEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  account: String!
  roleId: String
  name: String!
  role: SysRoleEntity
  accounts: [SysAccountEntity!]
  access_token: String
}

type SysRoleEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  name: String!
  sort: Int!
  status: Boolean!
  comment: String
  menus: [SysMenuOnRoleEntity!]
  users: [SysUserEntity!]
}

type SysMenuOnRoleEntity {
  roleId: String!
  menuId: String!
  power: Int!
  menu: SysMenuEntity
  role: SysRoleEntity
}

type SysUserBanMenuEntity {
  userId: String!
  menuId: String!
  user: SysUserEntity
  menu: SysMenuEntity
}

type SysMenuEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  name: String!
  path: String!
  powers: Int!
  sort: Int!
  comment: String
  parentId: String
  children: [SysMenuEntity!]
  roles: [SysMenuOnRoleEntity!]
  user_bans: [SysUserBanMenuEntity!]
}

type UserPaginationEntity {
  total: Int!
  data: [SysUserEntity!]!
}

type RolePaginationEntity {
  total: Int!
  data: [SysRoleEntity!]!
}

type BlogCategoriesEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  name: String!
  description: String
  posts: [BlogPostsEntity!]
}

type BlogTagEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  name: String!
  description: String
  blogd: [BlogPostsOnTagsEntity!]
}

type BlogPostsOnTagsEntity {
  postsId: String!
  tagId: String!
  tag: BlogTagEntity
  post: BlogPostsEntity
}

type BlogPostsEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  excerpt: String!
  coverImage: String!
  published: Boolean!
  publishedAt: DateTime!
  views: Int!
  likes: Int!
  slug: String!
  categoriesId: String!
  title: String!
  content: String!
  description: String
  status: Boolean!
  userId: String!
  user: SysUserEntity
  tags: [BlogPostsOnTagsEntity!]
  categories: [BlogCategoriesEntity!]
}

type PostsPaginationEntity {
  total: Int!
  data: [BlogPostsEntity!]!
}

type TagPaginationEntity {
  total: Int!
  data: [BlogTagEntity!]!
}

type CategoriesPaginationEntity {
  total: Int!
  data: [BlogCategoriesEntity!]!
}

type BlogCommentsEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  parentId: String
  content: String!
  status: Boolean!
  userId: String!
  postId: String!
  user: SysUserEntity
  post: BlogPostsEntity
}

type CommentsPaginationEntity {
  total: Int!
  data: [BlogCommentsEntity!]!
}

type BlogLinksEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  description: String!
  clicks: Int!
  name: String!
  url: String!
  logo: String
  sort: Float!
  status: Boolean!
}

type LinksPaginationEntity {
  total: Int!
  data: [BlogLinksEntity!]!
}

type BlogAnnouncementsEntity {
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: String!
  startTime: DateTime!
  endTime: DateTime!
  important: Boolean!
  author: String!
  title: String!
  content: String!
  sort: Float!
  status: Boolean!
}

type AnnouncementsPaginationEntity {
  total: Int!
  data: [BlogAnnouncementsEntity!]!
}

type Query {
  hasWebsiteInit: Boolean!
  users: [SysUserEntity!]!
  userList(pagination: UserPaginationInput!): UserPaginationEntity!
  findOne(uid: String!): SysRoleEntity!
  menus: [SysMenuEntity!]!
  menu(uid: String!): SysMenuEntity!
  roles: [SysRoleEntity!]!
  roleList(pagination: RolePaginationInput!): RolePaginationEntity!
  findMenuOnRoles(id: String!): [SysMenuOnRoleEntity!]!
  viewer: SysUserEntity!
  posts(pagination: PostsPaginationInput!): PostsPaginationEntity!
  post(uid: String!): BlogPostsEntity!
  tags(pagination: TagPaginationInput!): TagPaginationEntity!
  tag(uid: String!): BlogTagEntity!
  categories(pagination: CategoriesPaginationInput!): CategoriesPaginationEntity!
  category(uid: String!): BlogCategoriesEntity!
  comments(pagination: CommentsPaginationInput!): CommentsPaginationEntity!
  comment(uid: String!): BlogCommentsEntity!
  links(pagination: LinksPaginationInput!): LinksPaginationEntity!
  link(uid: String!): BlogLinksEntity!
  announcements(pagination: AnnouncementsPaginationInput!): AnnouncementsPaginationEntity!
  announcement(uid: String!): BlogAnnouncementsEntity!
}

input UserPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  name: String
}

input RolePaginationInput {
  take: Int! = 1
  skip: Int! = 10
  name: String
  status: Boolean
  comment: String
}

input PostsPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  title: String
  status: Boolean
  userId: String
  categoriesId: String
}

input TagPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  name: String
}

input CategoriesPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  name: String
}

input CommentsPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  content: String
  status: Boolean
  userId: String
  postId: String
}

input LinksPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  name: String
  url: String
  status: Boolean
}

input AnnouncementsPaginationInput {
  take: Int! = 1
  skip: Int! = 10
  title: String
  status: Boolean
}

type Mutation {
  websiteInit(roleName: String!, username: String!, account: String!, password: String!): SysUserEntity!
  createUser(createInput: CreateUserInput!): SysUserEntity!
  updateUser(updateInput: UpdateUserInput!): SysUserEntity!
  removeUser(uid: String!): SysUserEntity!
  createRole(data: CreateRoleInput!): SysRoleEntity!
  updateRole(data: UpdateRoleInput!): SysRoleEntity!
  assignRole(data: AssignRoleInput!): Int!
  removeRole(uid: String!): SysRoleEntity!
  authAccountLogin(account: String!, password: String!): SysUserEntity!
  createPost(createPostInput: CreatePostInput!): BlogPostsEntity!
  updatePost(updatePostInput: UpdatePostInput!): BlogPostsEntity!
  removePost(uid: String!): BlogPostsEntity!
  createTag(createTagInput: CreateTagInput!): BlogTagEntity!
  updateTag(updateTagInput: UpdateTagInput!): BlogTagEntity!
  removeTag(uid: String!): BlogTagEntity!
  createCategory(createCategoryInput: CreateCategoryInput!): BlogCategoriesEntity!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): BlogCategoriesEntity!
  removeCategory(uid: String!): BlogCategoriesEntity!
  createComment(createCommentInput: CreateCommentInput!): BlogCommentsEntity!
  updateComment(updateCommentInput: UpdateCommentInput!): BlogCommentsEntity!
  removeComment(uid: String!): BlogCommentsEntity!
  createLink(createLinkInput: CreateLinkInput!): BlogLinksEntity!
  updateLink(updateLinkInput: UpdateLinkInput!): BlogLinksEntity!
  removeLink(uid: String!): BlogLinksEntity!
  createAnnouncement(createAnnouncementInput: CreateAnnouncementInput!): BlogAnnouncementsEntity!
  updateAnnouncement(updateAnnouncementInput: UpdateAnnouncementInput!): BlogAnnouncementsEntity!
  removeAnnouncement(uid: String!): BlogAnnouncementsEntity!
}

input CreateUserInput {
  name: String!
  account: String
  roleId: String
}

input UpdateUserInput {
  name: String
  account: String
  roleId: String
  uid: String!
}

input CreateRoleInput {
  name: String!
  status: Boolean
  comment: String
  sort: Int
}

input UpdateRoleInput {
  uid: String!
  name: String
  status: Boolean
  comment: String
  sort: Int
}

input AssignRoleInput {
  roleId: String!
  menuIds: [String!]!
}

input CreatePostInput {
  title: String!
  content: String!
  description: String
  status: Boolean!
  userId: String!
  categoriesId: String
}

input UpdatePostInput {
  title: String
  content: String
  description: String
  status: Boolean
  userId: String
  categoriesId: String
  uid: String!
}

input CreateTagInput {
  name: String!
}

input UpdateTagInput {
  name: String
  uid: String!
}

input CreateCategoryInput {
  name: String!
  description: String
}

input UpdateCategoryInput {
  name: String
  description: String
  uid: String!
}

input CreateCommentInput {
  content: String!
  status: Boolean!
  userId: String!
  postId: String!
}

input UpdateCommentInput {
  content: String
  status: Boolean
  userId: String
  postId: String
  uid: String!
}

input CreateLinkInput {
  name: String!
  url: String!
  logo: String
  sort: Float! = 0
  status: Boolean! = true
}

input UpdateLinkInput {
  name: String
  url: String
  logo: String
  sort: Float = 0
  status: Boolean = true
  uid: String!
}

input CreateAnnouncementInput {
  title: String!
  content: String!
  sort: Float! = 0
  status: Boolean! = true
}

input UpdateAnnouncementInput {
  title: String
  content: String
  sort: Float = 0
  status: Boolean = true
  uid: String!
}